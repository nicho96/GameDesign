package ca.nicho.server;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

import ca.nicho.client.SpriteSheet;
import ca.nicho.client.packet.EntityPacket;
import ca.nicho.client.packet.Packet;

public class ServerStart {

	public static final int PORT = 1024;
	
	public static ServerGameSocket con1;
	public static ServerGameSocket con2;	
	
	public static void main(String[] s){
		SpriteSheet.initSprites();
		Game.initWorld();
		new ServerStart();
	}
	
	public ServerStart(){
		try {
			System.out.println("Starting server on port " + PORT + "...");
			ServerSocket socket = new ServerSocket(PORT);
			Game.world.startClock();
			while(true){
				Socket con = socket.accept();
				ServerGameSocket gameCon = new ServerGameSocket(con);
				new Thread(gameCon).start();
				if(con1 == null)
					con1 = gameCon;
				else if (con2 == null)
					con2 = gameCon;
				else {
					//Close the connection as there are too many people on the server
					con.close();
					continue; //Prevents execution of any post-connection code for this connection
				}
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public static void sendGlobalPacket(Packet packet){
		if(ServerStart.con1 != null)
			ServerStart.con1.sendPacket(packet);
		if(ServerStart.con2 != null)
			ServerStart.con2.sendPacket(packet);
	}
	
}
