package ca.nicho.client.store;

import java.util.HashMap;
import java.util.Map;

import ca.nicho.client.Game;
import ca.nicho.client.Sprite;
import ca.nicho.client.entity.Entity;
import ca.nicho.client.entity.EntityBattleship;
import ca.nicho.client.entity.EntityMissile;
import ca.nicho.client.entity.EntityRadar;

public class StoreHandler {
	
	public static boolean isOpen = false;
	
	public int position = 0;
	public HashMap<Entity, Sprite> costs = new HashMap<Entity, Sprite>(); //Entity ID : Cost
	
	public StoreHandler(){
		
		costs.put(new EntityRadar(-1, -1, -1), new Sprite(100));
		costs.put(new EntityMissile(-1, -1, -1), new Sprite(125));
		costs.put(new EntityBattleship(-1, -1, -1), new Sprite(150));
		
	}
	
	public void next(){
		position = (posistion + 1)  % costs.size();
	}
	
	public boolean canAfford(int entityType){
		for(Map.Entry<Entity, Sprite> item: costs.entrySet()){
			if(item.getKey().sprites[0].type == entityType){
				if(item.getValue().type - Game.points > 0){
					return true;
				}else{
					return false;
				}
			}
		}
		return false;
	}
	
	public class StoreItem {
		
		public Entity entity;
		public Sprite sprite;
		public int cost;
		
	}
	
}
